1. Session Hijacking - Айди сессии может быть украден через перехват трафика в случае использование незашифрованного соеденения или посредством XSS атак

2. Session Replay - Злоумышление может переиспользовать сешн айди в случае если на сервере тсутствует валидация или экспаер сесионного токена

3.Session Timeout Exploits - Если никак не обрабатывать неактивность пользователя (не выкидывать его из сесиии) то злоумышленики могут воспользоваться этим

4. Session Fixation - Айди сессии не должно считыватся сервером из квери запроса и не должен принимать любой случайный айди



Для предотвращения выще перечисленных уязвимостей можно использовать следующие практики:

1. Использовать секьюрные куки сессии
SESSION_COOKIE_SECURE = True - для отправки сесоинных кук только по HTTPS
SESSION_COOKIE_HTTPONLY = True - ограничить доступ JS к сесионным кукам
SESSION_COOKIE_SAMESITE = 'Lax' - ограничить отправку сессионых кук межсайтовыми запросами

2. Редиректить весь HTTPS трафик на HTTPS
SECURE_SSL_REDIRECT = True

3. Генерировать заново айди серии в момент логина юзера

4. Использовать коротки жизненные циклы айди 
SESSION_COOKIE_AGE = 3600  # 1 hour (in seconds)

5. Включить авто-экспаер сессии при закрытии браузера пользователя 
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

Или настроить его самому на уровни миди вэир

class SessionTimeoutMiddleware:
    def __init__(self, get_response):
        self.get_response = get_response

    def __call__(self, request):
        if request.session.get('last_activity') and now() - request.session['last_activity'] > timedelta(minutes=30):
            request.session.flush()  # Expire session
        request.session['last_activity'] = now()
        return self.get_response(request)

6. Всегда предоставлять юзеру опцию лог аута которая автоматически делает сессию невалидной

7. Можно опционально добавить проверку на аномалии в изменчивости IP юзера, но нужно так же помнить о юзерах с динамичным IP

8. Помимо использования найди серии можно так же дополнительно усилить надежность добавив уникальный токен в каждый запрос
