1. Использовать CDN который будет распределять нагрузку между несколькими серверами,
тем самым снижая нагрузку на главный поглощая большИй обьем вредоносного трафика

2. Поставить ограничение на кол-во запросов с одного IP
Можно использовать мидлвеир - django-ratelimit которые позволит использовать декраторы на вьюшк
указывая IP и кол-во запросов в пределах указаного таймфрейма

from django_ratelimit.decorators import ratelimit

@ratelimit(key='ip', rate='10/m', block=True)
def my_view(request):
    return HttpResponse("Rate-limited view")


3. Использовать WAF который автоматически фильтрует и блокирует подозрительные HTTP запросы

4. ДЛЯ API можно использовать класс встроенный в ДФР - UserRateThrottle дабы ограничеть кол-во. поступаемых запросов

5. Использовать кеш и часто запрашиваемые ресурсы отдавать напрямую из кеша тем самым уменьшая нагрузку на приложение и БД

6. Напрямую заносить подозрительные IP в black list (процес можно автоматизировать с помощью интсурмента Fail2Ban)